package main.java.ui;

import main.java.DAO.OffreEmploiDAO;
import main.java.DAO.PostulationDAO;
import main.java.DAO.DemandeurDAO;
import main.java.models.OffreEmploi;
import main.java.models.Postulation;
import main.java.models.Demandeur;
import javax.swing.*;
import java.awt.*;
import java.sql.Date;
import java.sql.SQLException;

public class OffreEmploiDetailFrame extends JFrame {
    private final int numOffre;
    private final int codeClient;

    public OffreEmploiDetailFrame(int numOffre, int codeClient) {
        this.numOffre = numOffre;
        this.codeClient = codeClient;

        setTitle("Détail de l'offre d'emploi");
        setSize(600, 800);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        initComponents();
    }

    private void initComponents() {
        setLayout(new BorderLayout(10, 10));
        
        try {
            OffreEmploi offre = OffreEmploiDAO.getOffreEmploiById(numOffre);
            if (offre == null) {
                add(new JLabel("Offre non trouvée"), BorderLayout.CENTER);
                return;
            }

            // Create main panel
            JPanel mainPanel = new JPanel();
            mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
            mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

            // Add offer details
            mainPanel.add(createLabelPanel("Titre:", offre.getTitre()));
            mainPanel.add(Box.createVerticalStrut(10));
            mainPanel.add(createLabelPanel("Compétences requises:", offre.getCompetences()));
            mainPanel.add(Box.createVerticalStrut(10));
            mainPanel.add(createLabelPanel("Expérience demandée:", offre.getNbAnneeExperienceDemandee() + " ans"));
            mainPanel.add(Box.createVerticalStrut(10));
            mainPanel.add(createLabelPanel("Nombre de postes:", String.valueOf(offre.getNbPostes())));
            mainPanel.add(Box.createVerticalStrut(10));
            mainPanel.add(createLabelPanel("État:", offre.getEtat().toString()));

            // Add apply button if the offer is active
            if (offre.getEtat() == OffreEmploi.EtatOffre.ACTIVE) {
                JButton postulerButton = new JButton("Postuler à cette offre");
                postulerButton.addActionListener(e -> postuler(offre));
                
                JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
                buttonPanel.add(postulerButton);
                add(buttonPanel, BorderLayout.SOUTH);
            }

            add(new JScrollPane(mainPanel), BorderLayout.CENTER);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Erreur lors du chargement de l'offre: " + e.getMessage(),
                "Erreur",
                JOptionPane.ERROR_MESSAGE);
        }
    }

    private JPanel createLabelPanel(String label, String value) {
        JPanel panel = new JPanel(new BorderLayout());
        panel.add(new JLabel(label), BorderLayout.NORTH);
        JTextArea valueArea = new JTextArea(value);
        valueArea.setLineWrap(true);
        valueArea.setWrapStyleWord(true);
        valueArea.setEditable(false);
        valueArea.setBackground(null);
        panel.add(valueArea, BorderLayout.CENTER);
        return panel;
    }

    private void postuler(OffreEmploi offre) {
        try {
            Demandeur demandeur = DemandeurDAO.getDemandeurById(codeClient);
            if (demandeur == null) {
                JOptionPane.showMessageDialog(this,
                    "Erreur: Impossible de trouver vos informations de profil",
                    "Erreur",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!offre.peutPostuler(demandeur)) {
                JOptionPane.showMessageDialog(this,
                    "Vous ne pouvez pas postuler à cette offre. Vérifiez vos années d'expérience ou si vous n'avez pas déjà postulé.",
                    "Non autorisé",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            int confirmation = JOptionPane.showConfirmDialog(
                this,
                "Voulez-vous postuler à cette offre ?",
                "Confirmation",
                JOptionPane.YES_NO_OPTION
            );

            if (confirmation == JOptionPane.YES_OPTION) {
                // Create new postulation with current date
                Postulation postulation = new Postulation(
                    0, // ID will be generated by the database
                    new Date(System.currentTimeMillis()),
                    offre,
                    demandeur,
                    offre.getEdition()
                );

                PostulationDAO.addPostulation(postulation);
                
                JOptionPane.showMessageDialog(this, 
                    "Votre candidature a été enregistrée avec succès!",
                    "Succès",
                    JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Erreur lors de la postulation: " + e.getMessage(),
                "Erreur",
                JOptionPane.ERROR_MESSAGE);
        }
    }
} 